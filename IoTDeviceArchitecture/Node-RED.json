[     {        "id":"fcd4d5d4.f1f3c8",       "type":"mqtt-broker",       "z":"1294dea6.abda71",       "broker":"localhost",       "port":"1883",       "clientid":"",       "usetls":false,       "verifyservercert":true,       "compatmode":true,       "keepalive":"60",       "cleansession":true,       "willTopic":"",       "willQos":"0",       "willRetain":null,       "willPayload":"",       "birthTopic":"",       "birthQos":"0",       "birthRetain":null,       "birthPayload":""    },    {        "id":"4a38b38a.722c0c", "type":"mqtt out",       "z":"1294dea6.abda71",       "name":"Raspberry Pi Actuators",       "topic":"",       "qos":"0",       "retain":"",       "broker":"fcd4d5d4.f1f3c8",       "x":708,       "y":190,       "wires":[          ]    },    {        "id":"87c27b64.367eb8",       "type":"mqtt in",       "z":"1294dea6.abda71",       "name":"Raspberry Pi Sensor Data",       "topic":"SNHU/IT697/sensor/data/#",       "broker":"fcd4d5d4.f1f3c8",       "x":120,       "y":29,       "wires":[           [              "8429a230.c79dd"          ]       ]    },    {        "id":"c4ab8779.c202b8",       "type":"function",       "z":"1294dea6.abda71",       "name":"Add Actuator Control Topic",       "func":"msg.topic = \"SNHU/IT697/actuator/control/\" + msg.uuid; \nreturn msg;",       "outputs":1,       "noerr":0,       "x":677,       "y":110,       "wires":[           [              "4a38b38a.722c0c",             "f29bc1dc.0a7d9"          ] ]    },    {        "id":"61ec95f0.d06a9c",       "type":"function",       "z":"1294dea6.abda71",       "name":"Extract UUID",       "func":"msg.topicParts = msg.topic.split('/');\nmsg.uuid = msg.topicParts[msg.topicParts.length-1];\nreturn msg;",       "outputs":1,       "noerr":0,       "x":121,       "y":110,       "wires":[           [              "e8ecef47.b5248",             "7503f9dd.86b598",             "91cf4d59.c489"          ]       ]    },    {        "id":"e8ecef47.b5248",       "type":"function",       "z":"1294dea6.abda71",       "name":"Potentiometer to Blue LED",       "func":"if (msg.payload.potentiometer === undefined) {\n    return;\n}\n\nmsg.payload = {\n    blue_led: Math.floor(msg.payload.potentiometer/4)\n};\nreturn msg;",       "outputs":1,       "noerr":0,       "x":386,       "y":110,       "wires":[           [              "c4ab8779.c202b8"          ]       ]    },    {        "id":"8429a230.c79dd",       "type":"json",       "z":"1294dea6.abda71",       "name":"",       "x":307,       "y":29, "wires":[           [              "61ec95f0.d06a9c"          ]       ]    },    {        "id":"f29bc1dc.0a7d9",       "type":"debug",       "z":"1294dea6.abda71",       "name":"",       "active":false,       "console":"false",       "complete":"true",       "x":748,       "y":31,       "wires":[          ]    },    {        "id":"7503f9dd.86b598",       "type":"debug",       "z":"1294dea6.abda71",       "name":"",       "active":false,       "console":"false",       "complete":"false",       "x":119,       "y":174,       "wires":[          ]    },    {        "id":"91cf4d59.c489",       "type":"function",       "z":"1294dea6.abda71",       "name":"Temperature and Humidity to LCD",       "func":"if (msg.payload.dht_sensor === undefined) {\n    return;\n}\n\nvar temperature = msg.payload.dht_sensor.temperature;\nvar humidity = msg.payload.dht_sensor.humidity;\nvar lcd = {\n    rgb: [0, 255, 0],\n    text: \"Temp: \"+temperature+\"C\\n\"+\"Humidity: \"+humidity+\"%\"\n}\nmsg.payload = {\n    lcd: lcd\n};\nreturn msg;",       "outputs":1,       "noerr":0, "x":390,       "y":153,       "wires":[           [              "c4ab8779.c202b8"          ]       ]    } ]